<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    	http://www.springframework.org/schema/beans 
    	http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
    <description>Spring MVC Configuration</description>
    
    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:datebasesite.properties"/> 
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->  <!-- use-default-filters 该属性默认值为true  不写的时候 扫描包及其子包-->  
	<context:component-scan base-package="com.controller" use-default-filters="false" > <!-- base-package 如果多个，用“,”分隔 --> 
	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven />
	 <!-- content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			将StringHttpMessageConverter的默认编码设为UTF-8
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
		    	<property name="writeAcceptCharset" value="false"/>
			</bean>
			将Jackson2HttpMessageConverter的默认格式化输出为false
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                	<list><value>application/json;charset=UTF-8</value></list>
                </property>
                <property name="prettyPrint" value="false"/>
                <property name="objectMapper">  
                    <bean class="com.hefy.common.mapper.JsonMapper"></bean>  
                </property> 
            </bean>
		</mvc:message-converters>
	</mvc:annotation-driven> -->
	
	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<!-- <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="xml" value="application/xml"/> 
                <entry key="json" value="application/json"/> 
            </map>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
	</bean> -->
	
    <!-- 静态资源需要单独处理，不需要dispatcher servlet -->  
    <mvc:resources location="/css/" mapping="/css/**"></mvc:resources> 
    <mvc:resources location="/images/" mapping="/images/**"></mvc:resources> 
    <!-- 查看图片时，logos文件夹不需要dispatcher servlet --> 
    <mvc:resources location="/logos/" mapping="/logos/**"></mvc:resources>
	
	<!-- 配置视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		id="internalResourceViewResolver">
		<!-- 前缀 -->
		<property name="prefix" value="${web.view.prefix}" />
		<!-- 后缀 -->
		<property name="suffix" value="${web.view.suffix}" />
	</bean>
	
	<!-- 配置MultipartResolver 用于文件上传 使用spring的CommosMultipartResolver -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"  
        p:defaultEncoding="UTF-8"  
        p:maxUploadSize="5400000"  
        p:uploadTempDir="fileUpload/temp" 
     > 
      <!--D:\spring mvc workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\fileUpload  -->  
    </bean> 
    <!-- defaultEncoding="UTF-8" 是请求的编码格式，默认为iso-8859-1
maxUploadSize="5400000" 是允许上传文件的最大值，单位为字节
uploadTempDir="fileUpload/temp" 为上传文件的临时路径--> 
	<!-- 托管MyExceptionHandler -->
	<bean class="com.exception.MyExceptionHandler"/>
</beans>